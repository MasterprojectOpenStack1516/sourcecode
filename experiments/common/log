#!/bin/bash

if ( [ "$1" == "-h" ] || [ "$1" == "--help" ] )
then
  echo '-h --help        display this help and exit'
  echo '-v               use logging_level "v" or ""'
  echo '-vv              use logging_level "vv"'
  echo '-vvv             use logging_level "vvv"'
  echo '-i --input       output the stdin'
  echo '-n               do not output a newline at the end'
  exit 0
fi

if ! ( [ "$logging_level" == "" ]   || \
	   [ "$logging_level" == "v" ]  || \
	   [ "$logging_level" == "vv" ] || \
	   [ "$logging_level" == "vvv" ] )
then
  >&2 echo 'ERROR: Variable $logging_level should be set to "", "v", "vv" or, "vvv".'
  exit 1
fi

if [ "$logging_level" == "" ]
then
  logging_level="v"
fi

function print {
	echo -n X"$1" | tail -c +2
}

# using shift according to 
# http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_09_07.html

use_stdin=false
use_stdout=false
used_stdout=false
has_output=false
output_a_newlinie_at_end=true
output_from_arguments=''

while (( "$#" )); do
  if [ "-$logging_level" == "$1" ]
  then
    if [ "$has_output" == "true" ]
    then
      print "$output_from_arguments"
      used_stdout=true
    fi
    use_stdout=true
  elif ( [ "$1" == '--input' ] || [ "$1" == "-i" ])
  then
    use_stdin=true
  elif ( [ "$1" == "-v" ]   || \
	     [ "$1" == "-vv" ]  || \
	     [ "$1" == "-vvv" ] )
  then
    # do not use the argument
    ( : )
  elif [ "$1" == "-n" ]
  then
    output_a_newlinie_at_end=false
  else
    # print the argument
    if [ "$use_stdout" == false ]
    then
      if [ "$has_output" == "false" ]
      then
        output_from_arguments="$1"
      else
        output_from_arguments="$output_from_arguments $1"
      fi
      has_output=true
    else
      if [ "$has_output" == "true" ]
      then 
        print " $1"
      else
        print "$1"
        has_output=true
      fi
      used_stdout=true
    fi
  fi

  # use next argument
  shift
done

if [ "$use_stdout" == "true" ] && [ "$output_a_newlinie_at_end" == "true" ]
then
  if [ "$use_stdin" == "true" ] && [ "$used_stdout" == "false" ]
  then
    # do not print a newline before the input
    ( : )
  else
    # print last newline
    echo
  fi
fi
if [ "$use_stdin" == "true" ]
then
  if [ "$use_stdout" == "true" ]
  then
    # output stdin
    cat
  else
    cat >/dev/null
  fi
fi
