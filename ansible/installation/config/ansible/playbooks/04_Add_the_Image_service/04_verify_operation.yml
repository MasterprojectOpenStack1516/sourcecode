---
- name:  "Verify Operation"
  hosts: controller
  roles:
    - config
  sudo: True
  gather_facts: False
  tasks:

  #       1. In each client environment script, configure the Image service client to use API version
    # we already put "export OS_IMAGE_API_VERSION=2" into the admin-openrc.sh and demo-openrc.sh
    # now we need to verify that

  - name: 2. Source the admin credentials to gain access to admin-only CLI commands 2.0
    shell: source {{ item }} && test "$OS_IMAGE_API_VERSION" == "2"
    args:
      executable: /bin/bash
    with_items:
    - admin-openrc.sh
    - demo-openrc.sh

  - name: 3.1 Remove the temporary local directory and source image
    file: path=/tmp/images state=absent

  - name: 3.2 Create a temporary local directory
    file: path=/tmp/images/default state=directory

  - name: 4. Download the source image into it
    shell: "wget -P /tmp/images/default {{ config.default_image_url }}"

  - name: 5.1. Upload the image to the Image service using the QCOW2 disk format, bare container format, and public visibility so all projects can access it
    # note that --is-public True was changed to --visibility public
    shell: source admin-openrc.sh; \
           glance image-create \
                  --name "{{ config.default_image_name }}" \
                  --file /tmp/images/default/* \
                  --disk-format qcow2 \
                  --container-format bare \
                  --visibility public
    args:
      executable: /bin/bash
    register: glance_image_create

  - name: 5.2. Check the output for name and visibility
    assert:
      that: 
      - glance_image_create.stdout | search("name\s*\|\s*" + config.default_image_name)
      - glance_image_create.stdout | search("visibility\s*\|\s*public")

  - name: 6. Confirm upload of the image and validate attributes
    shell: source admin-openrc.sh; glance image-list | grep -q "{{ config.default_image_name }}"
    args:
      executable: /bin/bash

  - name: 7. Remove the temporary local directory and source image
    file: path=/tmp/images state=absent
