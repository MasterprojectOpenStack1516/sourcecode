---
- name: Verify operation
  hosts: controller
  roles:
  - config
  tasks:

  - name: 1. For security reasons, disable the temporary authentication token mechanism
    shell: "sed 's/admin_token_auth\\s\\?//' /etc/keystone/keystone-paste.ini > /etc/keystone/keystone-paste.ini"
    sudo: True

  - name: 2. Unset the temporary OS_TOKEN and OS_URL environment variables
  # this does not need to be done because we do not have them set 
  # make sure they are not set
  # "man test"
    shell: test -z "$OS_TOKEN" || { echo \$OS_TOKEN should not be set ; exit 1 ; } ; \
           test -z "$OS_URL"   || { echo \$OS_URL should not be set ; exit 2 ; }
  
  - name: 3. As the admin user, request an authentication token from the Identity version 2.0 API
    shell: openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                     --os-project-name admin --os-username admin \
                     --os-password "{{ config.openstack_admin_user_password }}" \
                     --os-auth-type password \
                     token issue

  - name: 4. As the admin user, request an authentication token from the Identity version 3.0 API
    shell: openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                     --os-project-domain-id default --os-user-domain-id default \
                     --os-project-name admin --os-username admin \
                     --os-password "{{ config.openstack_admin_user_password }}" \
                     --os-auth-type password \
                     token issue

  - name: 5. As the admin user, list projects to verify that the admin user can execute admin-only CLI commands and that the Identity service contains the projects that you created
    shell: test -n `openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                              --os-project-name admin --os-username admin \
                              --os-password "{{ config.openstack_admin_user_password }}" \
                              --os-auth-type password \
                              project list \
                    | grep -o {{ item }}`
    with_items:
      - service
      - demo
      - admin

  - name: 6. As the admin user, list users to verify that the Identity service contains the users that you created
    shell: test -n `openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                              --os-project-name admin --os-username admin \
                              --os-password "{{ config.openstack_admin_user_password }}" \
                              --os-auth-type password \
                              user list \
                    | grep -o {{ item }}`
    with_items:
      - admin
      - demo

  - name: 7. As the admin user, list roles to verify that the Identity service contains the role that you created
    shell: test -n `openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                              --os-project-name admin --os-username admin \
                              --os-password "{{ config.openstack_admin_user_password }}" \
                              --os-auth-type password \
                             role list \
                    | grep -o {{ item }}`
    with_items:
      - admin
      - user

  - name: 8. As the demo user, request an authentication token from the Identity version 3 API
    shell: openstack --os-auth-url "{{ config.os_auth_admin_url }}" \
                     --os-project-domain-id default --os-user-domain-id default \
                     --os-project-name demo --os-username demo \
                     --os-password "{{ config.openstack_demo_user_password }}" \
                     --os-auth-type password \
                     token issue

  - name: 9. As the demo user, attempt to list users to verify that it cannot execute admin-only CLI commands
    shell: test -n `openstack --os-auth-url "{{ config.os_auth_user_url }}" \
                              --os-project-domain-id default --os-user-domain-id default \
                              --os-project-name demo --os-username demo \
                              --os-password "{{ config.openstack_demo_user_password }}" \
                              --os-auth-type password \
                              user list \
                    | grep -o "ERROR. openstack You are not authorized to perform the requested action, admin_required. (HTTP 403)"`
